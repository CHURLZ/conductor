buildscript {

    repositories {
        jcenter()
    }

    dependencies {
        classpath "com.avast.gradle:gradle-docker-compose-plugin:${revDockerCompose}"
    }
}

apply plugin: 'docker-compose'
apply plugin: 'groovy'

dependencies {

    testImplementation project(':conductor-core')
    testImplementation project(':conductor-common')
    testImplementation project(':conductor-contribs')
    testImplementation project(':conductor-server')
    testImplementation project(':conductor-rest')
    testImplementation project(':conductor-redis-persistence')
    testImplementation project(':conductor-mysql-persistence')
    testImplementation project(':conductor-postgres-persistence')
    testImplementation project(':conductor-grpc')
    testImplementation project(':conductor-grpc-server')
    testImplementation project(':conductor-grpc-client')
    testImplementation project(':conductor-client')

    testImplementation "com.fasterxml.jackson.core:jackson-databind"
    testImplementation "com.fasterxml.jackson.core:jackson-core"

    testImplementation "org.apache.commons:commons-lang3"

    testImplementation "com.google.protobuf:protobuf-java:${revProtoBuf}"
    testImplementation "com.google.guava:guava:${revGuava}"

    testImplementation "redis.clients:jedis:${revJedis}"
    testImplementation "com.netflix.dyno-queues:dyno-queues-redis:${revDynoQueues}"

    testImplementation "org.codehaus.groovy:groovy-all:${revGroovy}"
    testImplementation "org.spockframework:spock-core:${revSpock}"
    testImplementation "org.spockframework:spock-spring:${revSpock}"

    testImplementation "org.testcontainers:elasticsearch:${revTestESContainer}"
}

dockerCompose {
    integrationTestDocker {
        useComposeFiles = ["./docker-compose.yml"]
        startedServices = ["mysqldb", "postgresdb"]
        waitForTcpPorts = true
        isRequiredBy(tasks.test)
        projectName = project.name
    }
}

task intDockerStart() {
    group = "Postgres and Mysql data access based Integration Test"
    description "Starts a local db container for postgres and mysql data access integration tests."
    dependsOn integrationTestDockerComposeDownForced
    dependsOn integrationTestDockerComposeUp
}

task intDockerDown(dependsOn: integrationTestDockerComposeDownForced) {
    group = "Postgres and Mysql data access based Integration Test"
    description "Stops a local db container for postgres and mysql data access integration tests."
}

test.doFirst {
    dockerCompose.exposeAsSystemProperties(test)
}

test.finalizedBy("intDockerDown")

test {
    testLogging {
        exceptionFormat = 'full'
    }
}
